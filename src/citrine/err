---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    671                 headers=headers,
--> 672                 chunked=chunked,
    673             )

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    420                     # Otherwise it looks like a bug in the code.
--> 421                     six.raise_from(e, None)
    422         except (SocketTimeout, BaseSSLError, SocketError) as e:

/opt/conda/lib/python3.7/site-packages/urllib3/packages/six.py in raise_from(value, from_value)

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    415                 try:
--> 416                     httplib_response = conn.getresponse()
    417                 except BaseException as e:

/opt/conda/lib/python3.7/http/client.py in getresponse(self)
   1343             try:
-> 1344                 response.begin()
   1345             except ConnectionError:

/opt/conda/lib/python3.7/http/client.py in begin(self)
    305         while True:
--> 306             version, status, reason = self._read_status()
    307             if status != CONTINUE:

/opt/conda/lib/python3.7/http/client.py in _read_status(self)
    266     def _read_status(self):
--> 267         line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
    268         if len(line) > _MAXLINE:

/opt/conda/lib/python3.7/socket.py in readinto(self, b)
    588             try:
--> 589                 return self._sock.recv_into(b)
    590             except timeout:

/opt/conda/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py in recv_into(self, *args, **kwargs)
    317             else:
--> 318                 raise SocketError(str(e))
    319         except OpenSSL.SSL.ZeroReturnError:

OSError: (104, 'ECONNRESET')

During handling of the above exception, another exception occurred:

ProtocolError                             Traceback (most recent call last)
/opt/conda/lib/python3.7/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)
    448                     retries=self.max_retries,
--> 449                     timeout=timeout
    450                 )

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    719             retries = retries.increment(
--> 720                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]
    721             )

/opt/conda/lib/python3.7/site-packages/urllib3/util/retry.py in increment(self, method, url, response, error, _pool, _stacktrace)
    399             if read is False or not self._is_method_retryable(method):
--> 400                 raise six.reraise(type(error), error, _stacktrace)
    401             elif read is not None:

/opt/conda/lib/python3.7/site-packages/urllib3/packages/six.py in reraise(tp, value, tb)
    733             if value.__traceback__ is not tb:
--> 734                 raise value.with_traceback(tb)
    735             raise value

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    671                 headers=headers,
--> 672                 chunked=chunked,
    673             )

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    420                     # Otherwise it looks like a bug in the code.
--> 421                     six.raise_from(e, None)
    422         except (SocketTimeout, BaseSSLError, SocketError) as e:

/opt/conda/lib/python3.7/site-packages/urllib3/packages/six.py in raise_from(value, from_value)

/opt/conda/lib/python3.7/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    415                 try:
--> 416                     httplib_response = conn.getresponse()
    417                 except BaseException as e:

/opt/conda/lib/python3.7/http/client.py in getresponse(self)
   1343             try:
-> 1344                 response.begin()
   1345             except ConnectionError:

/opt/conda/lib/python3.7/http/client.py in begin(self)
    305         while True:
--> 306             version, status, reason = self._read_status()
    307             if status != CONTINUE:

/opt/conda/lib/python3.7/http/client.py in _read_status(self)
    266     def _read_status(self):
--> 267         line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
    268         if len(line) > _MAXLINE:

/opt/conda/lib/python3.7/socket.py in readinto(self, b)
    588             try:
--> 589                 return self._sock.recv_into(b)
    590             except timeout:

/opt/conda/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py in recv_into(self, *args, **kwargs)
    317             else:
--> 318                 raise SocketError(str(e))
    319         except OpenSSL.SSL.ZeroReturnError:

ProtocolError: ('Connection aborted.', OSError("(104, 'ECONNRESET')"))

During handling of the above exception, another exception occurred:

ConnectionError                           Traceback (most recent call last)
<ipython-input-12-2eade5053a94> in <module>
      1 # Also note: automatic pagination!
----> 2 for project in session.projects.list():
      3     print('Project ID: {} name: {}'.format(project.uid, project.name))

/opt/conda/lib/python3.7/site-packages/citrine/_rest/collection.py in list(self, page, per_page)
    139
    140             count = 0
--> 141             for idx, element in enumerate(subset):
    142                 # escaping from infinite loops where page/per_page are not
    143                 # honored and are returning the same results regardless of page:

/opt/conda/lib/python3.7/site-packages/citrine/_rest/collection.py in _fetch_page(self, page, per_page)
     86             params["per_page"] = per_page
     87
---> 88         data = self.session.get_resource(path, params=params)
     89         # A 'None' collection key implies response has a top-level array
     90         # of 'ResourceType'

/opt/conda/lib/python3.7/site-packages/citrine/_session.py in get_resource(self, path, **kwargs)
    148     def get_resource(self, path: str, **kwargs) -> dict:
    149         """GET a particular resource as JSON."""
--> 150         response = self.checked_get(path, **kwargs)
    151         return self._extract_response_json(path, response)
    152

/opt/conda/lib/python3.7/site-packages/citrine/_session.py in checked_get(self, path, **kwargs)
    216     def checked_get(self, path: str, **kwargs) -> Response:
    217         """Execute a GET request to a URL and utilize error filtering on the response."""
--> 218         return self.checked_request('GET', path, **kwargs)

/opt/conda/lib/python3.7/site-packages/citrine/_session.py in checked_request(self, method, path, version, **kwargs)
     83         """Check response status code and throw an exception if relevant."""
     84         if self._is_access_token_expired():
---> 85             self._refresh_access_token()
     86         uri = self._versioned_base_url(version) + path.lstrip('/')
     87

/opt/conda/lib/python3.7/site-packages/citrine/_session.py in _refresh_access_token(self)
     71         data = {'refresh_token': self.refresh_token}
     72         response = self.request(
---> 73             'POST', self._versioned_base_url() + 'tokens/refresh', json=data)
     74         if response.status_code != 200:
     75             raise UnauthorizedRefreshToken()

/opt/conda/lib/python3.7/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)
    528         }
    529         send_kwargs.update(settings)
--> 530         resp = self.send(prep, **send_kwargs)
    531
    532         return resp

/opt/conda/lib/python3.7/site-packages/requests/sessions.py in send(self, request, **kwargs)
    641
    642         # Send the request
--> 643         r = adapter.send(request, **kwargs)
    644
    645         # Total elapsed time of the request (approximately)

/opt/conda/lib/python3.7/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)
    496
    497         except (ProtocolError, socket.error) as err:
--> 498             raise ConnectionError(err, request=request)
    499
    500         except MaxRetryError as e:

ConnectionError: ('Connection aborted.', OSError("(104, 'ECONNRESET')"))